@use '../../../utils/scss/layout';
@use '../../../utils/scss/breakpoints';
@use '../../../utils/scss/colors';

@mixin background-wave($variant: light) {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 38%;

  $color: ccc;

  @if $variant == dark {
    $color: 1d1d1d;
    background-color: colors.$background-light;
  }

  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%23#{$color}" fill-opacity="1" d="M0,224L48,208C96,192,192,160,288,170.7C384,181,480,235,576,229.3C672,224,768,160,864,128C960,96,1056,96,1152,128C1248,160,1344,224,1392,256L1440,288L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z"></path></svg>');
}

:global {
  body {
    &.home {
      @include background-wave();

      &.dark-theme {
        @include background-wave(dark);
      }
    }
  }
}

.home {
  @include layout.center;
  height: 100vh;

  &__card {
    @include layout.center;
    width: calc(100% - 1rem);

    &__rows {
      display: inline-flex;
      flex-direction: column;
      row-gap: 0.75rem;

      &__heading {
        @include layout.center;
        column-gap: 0.5rem;
        margin-bottom: 1rem;
        font-size: 1.6rem;

        @media (min-width: breakpoints.$sm) {
          font-size: 2rem;
        }

        &--dark {
          color: colors.$background-light;
        }

        &__image {
          width: 2rem;
          height: 2rem;

          &--dark {
            filter: invert(100%);
          }
        }
      }
    }
  }
}
